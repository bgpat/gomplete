version: "2.1"
orbs:
  go:
    executors:
      init:
        docker:
        - image: circleci/golang:1.12
        environment:
          GO111MODULE: "on"
        working_directory: /go/src/github.com/bgpat/gomplete
    commands:
      mod:
        steps:
        - restore_cache:
            keys:
            - go-mod-v1-{{ checksum "go.sum" }}
        - run: go mod vendor
        - save_cache:
            key: go-mod-v1-{{ checksum "go.sum" }}
            paths:
            - /go/src/github.com/bgpat/gomplete/vendor
      test:
        steps:
        - run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        - run: bash <(curl -s https://codecov.io/bash)
      integration-test:
        steps:
        - run: go test -v -race -tags="integration ${TARGET_SHELL}" ./shells/${TARGET_SHELL}/integration_test.go
jobs:
  test:
    executor:
      name: go/init
    steps:
    - checkout
    - go/mod
    - go/test
  bash:
    docker:
    - image: circleci/golang:1.12
    executor:
      name: go/init
    steps:
    - checkout
    - go/mod
    - go/integration-test
    environment:
      TARGET_SHELL: bash
  zsh:
    docker:
    - image: bgpat/golang-zsh:1.12
    executor:
      name: go/init
    steps:
    - checkout
    - go/mod
    - go/integration-test
    environment:
      TARGET_SHELL: zsh
  fish:
    docker:
    - image: bgpat/golang-fish:1.12
    executor:
      name: go/init
    steps:
    - checkout
    - go/mod
    - go/integration-test
    environment:
      TARGET_SHELL: fish
workflows:
  version: 2
  test:
    jobs:
    - test
    - bash
    - zsh
    - fish
